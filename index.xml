<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Emma Aldred</title>
    <link>/</link>
    <description>Recent content on Emma Aldred</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 06 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Meet My Dogs!</title>
      <link>/post/2020/12/06/meet-my-dogs/</link>
      <pubDate>Sun, 06 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/12/06/meet-my-dogs/</guid>
      <description>  Truffle (left) and Mocha (right) cooling off after a long walk!
 </description>
    </item>
    
    <item>
      <title>Reticulate: R and Python can talk!</title>
      <link>/post/2020/12/06/reticulate-r-and-python-can-talk/</link>
      <pubDate>Sun, 06 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/12/06/reticulate-r-and-python-can-talk/</guid>
      <description>Reticulate is a great package because it lets you use code across R and python. In essence, it is how R and Python talk! Here are a few examples of how reticulate works:
library(reticulate) ## Warning: package &amp;#39;reticulate&amp;#39; was built under R version 3.6.2 grades&amp;lt;-data.frame(Points=c(99,76,87,95,50),Letter=c(&amp;quot;A&amp;quot;,&amp;quot;C&amp;quot;,&amp;quot;B&amp;quot;,&amp;quot;A&amp;quot;,&amp;quot;F&amp;quot;)) head(grades) ## Points Letter ## 1 99 A ## 2 76 C ## 3 87 B ## 4 95 A ## 5 50 F import numpy as np avg=np.</description>
    </item>
    
    <item>
      <title>Comp-bio Projects</title>
      <link>/post/2020/12/05/comp-bio-projects/</link>
      <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/12/05/comp-bio-projects/</guid>
      <description>Link to project 1
Link to project 2
Link to google</description>
    </item>
    
    <item>
      <title>Functions in Python</title>
      <link>/post/2020/12/05/learning-python/</link>
      <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/12/05/learning-python/</guid>
      <description>Being able to use functions is an essential tool in coding. Functions allow you to perform the same set of code over and over again. This helps save time by applying the same task in various situations. Functions often use iteration and conditionals to be able to perform the desired task.
import numpy as np Iteration: for and while loops are used to continually perform a set of code for a particular amount of times or while a particular statement is true</description>
    </item>
    
    <item>
      <title>Project 1: State Crime</title>
      <link>/project/project1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/project/project1/</guid>
      <description>Introduction
This project analyzes portions of three datasets that provide information on all of the 50 US states, excluding the District of Columbia. Each datset provides either information on crime, car crashes, or population statistics in each state. I chose these datasets because I wanted to see if there was a connection between state statistics (income, illiteracy, etc), reckless driving, and/or crime. I expected that with more poverty, less education, and higher urban populations I would find more crime and reckless driving.</description>
    </item>
    
    <item>
      <title>Project2</title>
      <link>/project/project2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/project/project2/</guid>
      <description>Introduction
This project analyzes variables within the dataset “Guns” uploaded as a CSV from https://vincentarelbundock.github.io/Rdatasets/datasets.html. The Guns dataset has data from 1977-1999 in all 50 US states and the District of Columbia. The data collected includes “violent” crime rate, “murder” rate, “robbery” rate, and “prisoners” - incarceration rate from the previous year - all per 100,000 members of the population. It also have demographic variables: “afam” is the percent of the state population (ages 10-64) that is African American, “cauc” is the percent of the state population (ages 10-64) that is Caucasian, “male” is the percent of the state population (ages 10-29) that is male, state “population” in millions of people, mean personal “income” in US dollars, and population “density”.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/</guid>
      <description>  Check out some of my coding projects below:
 Wrangling &amp;amp; Exploratory Data Analysis
 Modeling, Inference, Prediction
  -- </description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>/resume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/resume/</guid>
      <description>   </description>
    </item>
    
  </channel>
</rss>
